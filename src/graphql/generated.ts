/* This file is automatically generated by GraphQL Code Generator */
import { GraphQLClient } from 'graphql-request'
import { useQuery, useMutation, UseQueryOptions, UseMutationOptions } from '@tanstack/react-query'

export type Maybe<T> = T | null
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }

/*** Types ***/
export interface Lead {
  id: string
  name: string
  status: string
  lastContact: string
  rep: string
}

export interface GetLeadsQuery {
  leads: Lead[]
}

export interface GetLeadQueryVariables {
  id: string
}

export interface GetLeadQuery {
  lead: Maybe<Lead>
}

export interface UpdateLeadStatusMutationVariables {
  id: string
  status: string
}

export interface UpdateLeadStatusMutation {
  updateLeadStatus: Maybe<Pick<Lead, 'id' | 'status'>>
}

/*** Documents ***/
const GetLeadsDocument = `query GetLeads {\n  leads {\n    id\n    name\n    status\n    lastContact\n    rep\n  }\n}`

const GetLeadDocument = `query GetLead($id: ID!) {\n  lead(id: $id) {\n    id\n    name\n    status\n    lastContact\n    rep\n  }\n}`

const UpdateLeadStatusDocument = `mutation UpdateLeadStatus($id: ID!, $status: String!) {\n  updateLeadStatus(id: $id, status: $status) {\n    id\n    status\n  }\n}`

/*** Hooks ***/
export const useGetLeadsQuery = <TData = GetLeadsQuery, TError = unknown>(
  client: GraphQLClient,
  variables?: undefined,
  options?: UseQueryOptions<GetLeadsQuery, TError, TData>
) =>
  useQuery<GetLeadsQuery, TError, TData>(['GetLeads'], () => client.request<GetLeadsQuery>(GetLeadsDocument), options)

export const useGetLeadQuery = <TData = GetLeadQuery, TError = unknown>(
  client: GraphQLClient,
  variables: GetLeadQueryVariables,
  options?: UseQueryOptions<GetLeadQuery, TError, TData>
) =>
  useQuery<GetLeadQuery, TError, TData>(['GetLead', variables], () => client.request<GetLeadQuery>(GetLeadDocument, variables), options)

export const useUpdateLeadStatusMutation = <TData = UpdateLeadStatusMutation, TError = unknown, TVariables = UpdateLeadStatusMutationVariables>(
  client: GraphQLClient,
  options?: UseMutationOptions<TData, TError, TVariables>
) =>
  useMutation<TData, TError, TVariables>((vars) => client.request(UpdateLeadStatusDocument, vars), options)

